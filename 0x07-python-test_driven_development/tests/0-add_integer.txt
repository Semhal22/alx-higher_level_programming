Test for the module add
=====================================
Testing the documentation
>>> add_integer = __import__("0-add_integer").add_integer

>>> module_doc = __import__("0-add_integer").__doc__
>>> len(module_doc) > 0
True
>>> func_doc = add_integer.__doc__
>>> len(func_doc) > 0
True

=====================================
Testing with different values passed to the add function

>>> add_integer(3, 4)
7
>>> add_integer(3.2, 4.4)
7
>>> add_integer(4, "School")
Traceback (most recent call last):
    ...
TypeError: b must be an integer

>>> add_integer("Hey", 4.5)
Traceback (most recent call last):
    ...
TypeError: a must be an integer

>>> add_integer(1)
99
>>> add_integer()
Traceback (most recent call last):
    ...
TypeError: add_integer() missing 1 required positional argument: 'a'

>>> add_integer(float('inf'), 3)
Traceback (most recent call last):
    ...
OverflowError: cannot convert float infinity to integer

>>> add_integer(None)
Traceback (most recent call last):
    ...
TypeError: a must be an integer

>>> add_integer(float('nan'), 3)
Traceback (most recent call last):
    ...
ValueError: cannot convert float NaN to integer
